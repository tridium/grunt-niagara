These are the available command-line flags to pass to grunt-niagara. Note that
the defaults listed are determined based on your environment and can change
between different Niagara modules.

--niagara-home (default: {{ niagara-home }})
    your Niagara installation directory
--niagara-user-home (default: {{ niagara-user-home }})
    your Niagara user directory
--station-cwd (default: {{ station-cwd }})
    directory containing the station executable
--stations-dir (default: {{ stations-dir }})
    directory containing station files
--station-name (default: {{ station-name }})
    the name of the station to start up
--station-host (default: {{ station-host }})
    the hostname of the station
--station-http-port (default: {{ station-http-port }})
    the HTTP port the station uses
--station-https-port (default: {{ station-https-port }})
    the HTTPS port the station users
--station-fox-port (default: {{ station-fox-port }})
    the FOX port the station uses
--station-foxs-port (default: {{ station-foxs-port }})
    the FOXS port the station uses
--station-debug (default: {{ station-debug }})
    set to true to cause the station to run in JDWP debug mode
--station-debug-port (default: {{ station-debug-port }})
    specify the port for the JDWP transport to listen on
--station-debug-suspend (default: {{ station-debug-suspend }})
    set to true to cause the station to wait for you to connect a debugger
    before executing
--station-log-level (default: {{ station-log-level }})
    desired station log output level (available log levels: NONE, SEVERE,
    WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL) (In order to see
    System.out.println output, choose ALL)
--override-station-ports (default: {{ override-station-ports }})
    inject station-http-port and station-fox-port into config.bog before
    starting up the test station (useful for CI server where multiple tests
    must run at once)
--karma-server-port (default: {{ karma-server-port }})
    the port used by the Karma server
--niagara-test-server-port (default: {{ niagara-test-server-port }})
    the port used by niagara-test-server
--port-bump (default: {{ port-bump }})
    when developing multiple modules at once, the multiple running stations and
    Karma servers can have port collisions. Use this when spinning up a second
    (or third...) grunt-niagara instance so increment all the ports so they can
    run simultaneously.
--browsers (default: {{ browsers }})
    a comma-separated list of browsers for Karma to start up
    (available browsers: Chrome, ChromeHeadless, ChromeCanary, Safari, Firefox,
                         Opera, IE)
--chrome-flags
    if using Chrome, add an optional, comma-separated list of flags to pass to
    the executable. This list must be enclosed in a double-quote and each flag must be
    preceded by a '--'. Note that unlike other command-line options, the flags you
    pass in will be _merged_ with the default values instead of replacing them.
--jsdoc-dir (default: {{ jsdoc-dir }})
    the output directory for JSDoc files
--junit-reports-dir (default: {{ junit-reports-dir }})
    the output directory for test results in JUnit format
--eslint-reports-dir (default: {{ eslint-reports-dir }})
    the output directory for ESLint results in JUnit format
--coverage (default: {{ coverage }})
    true if code coverage reports should be generated (by default they will
    only be generated when executing the 'ci' task). Note that enabling code
    coverage can remove line numbers from stack traces in the event
    your tests throw an error.
--coverage-reports-dir (default: {{ coverage-reports-dir }})
    the output directory for Istanbul code coverage results
--testOnly
    this is a regex string. Only specs whose description matches this string
    will be executed by Karma.
--testNever
    this is a regex string. Specs whose description matches this string will
    never be executed by Karma.
--test-with-builtfiles
    instructs tests to preload any builtfiles before running, meaning that the
    test run will be closer to production conditions. It will only enable
    builtfiles from the module being tested, and requires the "name" field in
    your module's package.json to be correct.
--options (default: {{ options }})
    this is a JSON file that is used to override the default grunt
    command-line options.  See README.md for more details.
--config (default: {{ config }})
    this is the JSON file that is used to override the grunt config.
    See README.md for more details.

(note that in order for testOnly and testNever to work, you must require
 the AMD modules 'niagara-test-server/karmaUtils' and
 'niagara-test-server/globals' when running your specs. Remember to do a
 FULL test run before you push!)
